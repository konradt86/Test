Oczywiście, oto skrypt, który napisałem, aby przekształcić dane w kolumnach RDM i pogrupować je według funduszu:

```python
import pandas as pd

# Załadowanie rozszerzonego DataFrame'a
expanded_df = pd.read_csv('/mnt/data/expanded_result_load.csv')

# Zdefiniowanie funkcji, aby zastosować logikę warunkową do kolumn RDM
def replace_rdm_values(row, rdm_columns):
    for rdm_col in rdm_columns:
        row[rdm_col] = row['interest_rate_shock'] if row[rdm_col] <= 0.995 else '-'
    return row

# Stosowanie funkcji na DataFrame'ie
rdm_columns = [col for col in expanded_df.columns if 'RDM' in col]
modified_df = expanded_df.apply(lambda row: replace_rdm_values(row, rdm_columns), axis=1)

# Grupowanie przez 'FUND'
grouped_funds = modified_df.groupby('FUND')

# Tworzenie słownika, aby przechować każdą grupę jako oddzielny DataFrame
grouped_funds_dict = {fund: data for fund, data in grouped_funds}
```

Ta funkcja `replace_rdm_values` jest wywoływana dla każdego wiersza w DataFrame, przekształcając kolumny RDM według zadanego warunku. Następnie DataFrame jest grupowany według kolumny 'FUND', a wyniki są przechowywane w słowniku `grouped_funds_dict`.
