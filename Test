Oczywiście, oto skrypt w Pythonie, który użyłem do wyciągnięcia unikatowych wartości dla każdego `credit_spread` w każdej grupie RDM:

```python
import pandas as pd

# Definicja funkcji do ekstrakcji unikatowych wartości RDM dla każdego credit_spread
def extract_unique_rdm_by_credit_spread(group, rdm_columns):
    unique_values = {}
    # Dla każdego credit spread, ekstrahuj unikatowe wartości RDM
    for credit_spread in group['credit_spread_multiple'].unique():
        filtered_group = group[group['credit_spread_multiple'] == credit_spread]
        for col in rdm_columns:
            # Filtruj wartości nie-liczbowe, a następnie znajdź unikatowe
            numeric_values = pd.to_numeric(filtered_group[col], errors='coerce').dropna().unique()
            unique_values[(credit_spread, col)] = numeric_values.tolist() if len(numeric_values) > 0 else '-'
    return unique_values

# Zastosowanie funkcji do każdej grupy, aby uzyskać unikatowe wartości RDM według credit spread
unique_rdm_by_credit_spread = {fund: extract_unique_rdm_by_credit_spread(group, rdm_columns) 
                               for fund, group in grouped}
```

Ten skrypt przetwarza grupy danych DataFrame, które są podzielone według funduszu i dla każdej grupy ekstrahuje unikatowe wartości dla kolumn RDM, biorąc pod uwagę różne wartości `credit_spread_multiple`. Wyniki są przechowywane w słowniku `unique_rdm_by_credit_spread`, gdzie kluczem jest nazwa funduszu.
